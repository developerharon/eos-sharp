name: CI
on:
  push:
    branches:
    - develop
jobs:
  split-upm:
    name: split upm branch
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: split upm branch
      run: |
        git branch -d upm &> /dev/null || echo upm branch not found # recreate the upm branch each time
        git mv LICENSE $UPM_ROOT
        git mv README.md $UPM_ROOT
        echo "********************** ROOT **********************"
        ls
        git add "$UPM_ROOT"
        git config --global user.name 'github-bot'
        git config --global user.email 'github-bot@users.noreply.github.com'
        git commit -m "create release folder"
        git subtree split -P "$UPM_ROOT" -b upm                     # create the upm branch
        git checkout upm                                            # checkout the branch
        git ls-files | grep '\.csproj$' | xargs git rm                    # remove all .csproj files
        git ls-files | grep '\.csproj.meta$' | xargs git rm                    # remove all .csproj.meta files
        git commit -am "fix: src => root"
        echo "********************** ROOT **********************"
        ls
        git push -u origin upm --force                              # commit the branch
      env:
        UPM_ROOT: EosSharp
        
  split-nuget:
    name: split nuget branch
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: split nuget branch
      run: |
        git branch -d nuget &> /dev/null || echo nuget branch not found # recreate the nuget branch each time
        git mv LICENSE $NUGET_ROOT
        git mv README.md $NUGET_ROOT
        echo "********************** ROOT **********************"
        ls
        git add "$NUGET_ROOT"
        git config --global user.name 'github-bot'
        git config --global user.email 'github-bot@users.noreply.github.com'
        git commit -m "create release folder"
        git subtree split -P "$NUGET_ROOT" -b nuget                     # create the nuget branch
        git checkout nuget                                              # checkout the branch
        git ls-files | grep '\.meta$' | xargs git rm                    # remove all .meta files
        git commit -am "fix: src => root"
        echo "********************** ROOT **********************"
        ls
        git push -u origin nuget --force                                # commit the branch
      env:
        NUGET_ROOT: EosSharp
